=head1 NAME

augtool - inspect and modify configuration files

=head1 SYNOPSIS

augtool [OPTIONS] [COMMAND]

=head1 DESCRIPTION

Augeas is a configuration editing tool. It parses configuration files
in their native formats and transforms them into a tree. Configuration
changes are made by manipulating this tree and saving it back into
native config files.

augtool provides a command line interface to the generated tree. COMMAND
can be a single command as described under L</COMMANDS>. When called with
no COMMAND, it reads commands from standard input until an end-of-file is
encountered.

=head1 OPTIONS

=over 4

=item B<-c>, B<--typecheck>

Typecheck lenses. This can be very slow, and is therefore not done by
default, but is highly recommended during development.

=item B<-b>, B<--backup>

When files are changed, preserve the originals in a file with extension
'.augsave'

=item B<-n>, B<--new>

Save changes in files with extension '.augnew', do not modify the original
files

=item B<-r>, B<--root>=I<ROOT>

Use directory ROOT as the root of the filesystem. Takes precedence over a
root set with the AUGEAS_ROOT environment variable.

=item B<-I>, B<--include>=I<DIR>

Add DIR to the module loadpath. Can be given multiple times. The
directories set here are searched before any directories specified in the
AUGEAS_LENS_LIB environment variable, and before the default directories
F</usr/share/augeas/lenses> and F</usr/share/augeas/lenses/dist>.

=item B<-t>, B<--transform>=I<XFM>

Add a file transform; uses the 'transform' command syntax,
e.g. C<-t 'Fstab incl /etc/fstab.bak'>.

=item B<-l>, B<--load-file>=I<FILE>

Load an individual FILE into the tree. The lens to use is determined
automatically (based on autoload information in the lenses) and will be the
same that is used for this file when the entire tree is loaded. The option
can be specified multiple times to load several files, e.g. C<-l /etc/fstab
-l /etc/hosts>. This lens implies C<--noload> so that only the files
specified with this option will be loaded.

=item B<-f>, B<--file>=I<FILE>

Read commands from FILE.

=item B<-i>, B<--interactive>

Read commands from the terminal. When combined with B<-f> or redirection of
stdin, drop into an interactive session after executing the commands from
the file.

=item B<-e>, B<--echo>

When reading commands from a file via stdin, echo the commands before
printing their output.

=item B<-s>, B<--autosave>

Automatically save all changes at the end of the session.

=item B<-S>, B<--nostdinc>

Do not search any of the default directories for modules. When this option
is set, only directories specified explicitly with B<-I> or specified in
B<AUGEAS_LENS_LIB> will be searched for modules.

=item B<-L>, B<--noload>

Do not load any files on startup. This is generally used to fine-tune which
files to load by modifying the entries in C</augeas/load> and then issuing
a C<load> command.

=item B<-A>, B<--noautoload>

Do not load any lens modules, and therefore no files, on startup. This
creates no entries under C</augeas/load> whatsoever; to read any files,
they need to be set up manually and loading must be initiated with a
C<load> command. Using this option gives the fastest startup.

=item B<--span>

Load span positions for nodes in the tree, as they relate to the original
file. Enables the use of the B<span> command to retrieve position data.

=item B<--timing>

After executing each command, print how long, in milliseconds, executing
the command took. This makes it easier to spot slow queries, usually
through B<match> commands, and allows exploring alternative queries that
yield the same result but might be faster.

=item B<--version>

Print version information and exit. The version is also in the tree under
C</augeas/version>.

=back

=head1 COMMANDS

In interactive mode, commands and paths can be completed by pressing C<TAB>.

The paths accepted as arguments by commands use a small subset of XPath
path expressions. A path expression consists of a number of segments,
separated by C</>. In each segment, the character C<*> can be used to match
every node regardless of its label. Sibling nodes with identical labels can
be distinguished by appending C<[N]> to their label to match the N-th
sibling with such a label. The last sibling with a specific label can be
reached as C<[last()]>. See L</EXAMPLES> for some examples of this.

=head2 ADMIN COMMANDS

The following commands control the behavior of Augeas and augtool itself.

=over 4

=item B<help>

Print this help text

=item B<load>

Load files according to the transforms in C</augeas/load>.

=item B<quit>

Exit the program

=item B<retrieve> E<lt>LENSE<gt> E<lt>NODE_INE<gt> E<lt>PATHE<gt> E<lt>NODE_OUTE<gt>

Transform tree at PATH back into text using lens LENS and store the
resulting string at NODE_OUT. Assume that the tree was initially read in
with the same lens and the string stored at NODE_IN as input.

=item B<save>

Save all pending changes to disk. Unless either the B<-b> or B<-n>
command line options are given, files are changed in place.

=item B<store> E<lt>LENSE<gt> E<lt>NODEE<gt> E<lt>PATHE<gt>

Parse NODE using LENS and store the resulting tree at PATH.

=item B<transform> E<lt>LENSE<gt> E<lt>FILTERE<gt> E<lt>FILEE<gt>

Add a transform for FILE using LENS. The LENS may be a module name or a
full lens name.  If a module name is given, then "lns" will be the lens
assumed.  The FILTER must be either "incl" or "excl".  If the filter is
"incl",  the FILE will be parsed by the LENS.  If the filter is "excl",
the FILE will be excluded from the LENS. FILE may contain wildcards.

=item B<load-file> E<lt>FILEE<gt>

Load a specific FILE, automatically determining the proper lens from the
information in F</augeas/load>; without further intervention, the lens that
would oridnarily be used for this file will be used.

=back

=head2 READ COMMANDS

The following commands are used to retrieve data from the Augeas tree.

=over 4

=item B<dump-xml> I<[E<lt>PATHE<gt>]>

Print entries in the tree as XML. If PATH is given, printing starts there,
otherwise the whole tree is printed.

=item B<get> E<lt>PATHE<gt>

Print the value associated with PATH

=item B<label> E<lt>PATHE<gt>

Get and print the label associated with PATH

=item B<ls> E<lt>PATHE<gt>

List the direct children of PATH

=item B<match> E<lt>PATTERNE<gt> [E<lt>VALUEE<gt>]

Find all paths that match PATTERN. If VALUE is given, only the matching
paths whose value equals VALUE are printed

=item B<print> I<[E<lt>PATHE<gt>]>

Print entries in the tree. If PATH is given, printing starts there,
otherwise the whole tree is printed

=item B<span> E<lt>PATHE<gt>

Print the name of the file from which the node PATH was generated, as well
as information about the positions in the file corresponding to the label,
the value, and the entire node. PATH must match exactly one node.

You need to run 'set /augeas/span enable' prior to loading files to enable
recording of span information. It is disabled by default.

=back

=head2 WRITE COMMANDS

The following commands are used to modify the Augeas tree.

=over 4

=item B<clear> E<lt>PATHE<gt>

Set the value for PATH to NULL. If PATH is not in the tree yet, it and all
its ancestors will be created.

=item B<clearm> E<lt>BASEE<gt> E<lt>SUBE<gt>

Clear multiple nodes values in one operation. Find or create a node matching SUB
by interpreting SUB as a path expression relative to each node matching
BASE. If SUB is '.', the nodes matching BASE will be modified.

=item B<ins> I<E<lt>LABELE<gt>> I<E<lt>WHEREE<gt>> I<E<lt>PATHE<gt>>

Insert a new node with label LABEL right before or after PATH into the
tree. WHERE must be either 'before' or 'after'.

=item B<insert> I<E<lt>LABELE<gt>> I<E<lt>WHEREE<gt>> I<E<lt>PATHE<gt>>

Alias of B<ins>.

=item B<mv> E<lt>SRCE<gt> E<lt>DSTE<gt>

Move node SRC to DST. SRC must match exactly one node in the tree.  DST
must either match exactly one node in the tree, or may not exist yet. If
DST exists already, it and all its descendants are deleted. If DST does not
exist yet, it and all its missing ancestors are created.

=item B<move> E<lt>SRCE<gt> E<lt>DSTE<gt>

Alias of B<mv>.

=item B<cp> E<lt>SRCE<gt> E<lt>DSTE<gt>

Copy node SRC to DST. SRC must match exactly one node in the tree.  DST
must either match exactly one node in the tree, or may not exist yet. If
DST exists already, it and all its descendants are deleted. If DST does not
exist yet, it and all its missing ancestors are created.

=item B<copy> E<lt>SRCE<gt> E<lt>DSTE<gt>

Alias of B<cp>.

=item B<rename> E<lt>SRCE<gt> E<lt>LBLE<gt>

Rename the label of all nodes matching SRC to LBL.

=item B<rm> E<lt>PATHE<gt>

Delete PATH and all its children from the tree

=item B<set> E<lt>PATHE<gt> E<lt>VALUEE<gt>

Associate VALUE with PATH. If PATH is not in the tree yet,
it and all its ancestors will be created.

=item B<setm> E<lt>BASEE<gt> E<lt>SUBE<gt> [E<lt>VALUEE<gt>]

Set multiple nodes in one operation.  Find or create a node matching SUB by
interpreting SUB as a path expression relative to each node matching
BASE. If SUB is '.', the nodes matching BASE will be modified.

=item B<touch> E<lt>PATHE<gt>

Create PATH with the value NULL if it is not in the tree yet.  All its
ancestors will also be created.  These new tree entries will appear
last amongst their siblings.

=back

=head2 PATH EXPRESSION COMMANDS

The following commands help when working with path expressions.

=over 4

=item B<defnode> E<lt>NAMEE<gt> E<lt>EXPRE<gt> [E<lt>VALUEE<gt>]

Define the variable NAME to the result of evaluating EXPR, which must be a
nodeset. If no node matching EXPR exists yet, one is created and NAME will
refer to it. If VALUE is given, this is the same as 'set EXPR VALUE'; if
VALUE is not given, the node is created as if with 'clear EXPR' would and
NAME refers to that node.

=item B<defvar> E<lt>NAMEE<gt> E<lt>EXPRE<gt>

Define the variable NAME to the result of evaluating EXPR. The variable
can be used in path expressions as $NAME. Note that EXPR is evaluated when
the variable is defined, not when it is used.

=back

=head1 ENVIRONMENT VARIABLES

=over 4

=item B<AUGEAS_ROOT>

The file system root, defaults to '/'. Can be overridden with
the B<-r> command line option

=item B<AUGEAS_LENS_LIB>

Colon separated list of directories with lenses. Directories specified here
are searched after any directories set with the B<-I> command line option,
but before the default directories F</usr/share/augeas/lenses> and
F</usr/share/augeas/lenses/dist>

=back

=head1 DIAGNOSTICS

Normally, exit status is 0. If one or more commands fail, the exit status
is set to a non-zero value.

Note though that failure to load some of the files specified by transforms
in C</augeas/load> is not considered a failure. If it is important to know
that all files were loaded, you need to issue a C<match /augeas//error>
after loading to find out details about what files could not be loaded and
why.

=head1 EXAMPLES

  # command line mode
  augtool print /files/etc/hosts/

  # interactive mode
  augtool
  augtool> help
  augtool> print /files/etc/hosts/

  # Print the third entry from the second AcceptEnv line
  augtool print '/files/etc/ssh/sshd_config/AcceptEnv[2]/3'

  # Find the entry in inittab with action 'initdefault'
  augtool> match /files/etc/inittab/*/action initdefault

  # Print the last alias for each entry in /etc/hosts
  augtool> print /files/etc/hosts/*/alias[last()]

=head1 FILES

Lenses and schema definitions in F</usr/share/augeas/lenses> and
F</usr/share/augeas/lenses/dist>

=head1 AUTHOR

David Lutterkort <lutter@watzmann.net>

=head1 COPYRIGHT AND LICENSE

Copyright 2007-2016 David Lutterkort

Augeas (and augtool) are distributed under the GNU Lesser General Public
License (LGPL)

=head1 SEE ALSO

B<Augeas> project homepage L<http://www.augeas.net/>

L<augparse>
