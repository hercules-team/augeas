--- test aug_get()
assert(aug_get("etc/passwd/root/uid") == "0")

--- test aug_label()
assert(aug_label("etc/passwd/sync") == "sync")

--- test aug_set()
aug_set("/foo", "bar")
assert(aug_get("/foo") == "bar")

--- test aug_setm()
aug_setm("etc/passwd/*", "shell", "zsh")
assert(aug_get("etc/passwd/sync/shell") == "zsh")

--- test aug_span()
--- TODO

--- test aug_insert()
aug_insert("etc/passwd/*[1]", "foo", true)
assert(aug_label("etc/passwd/*[1]") == "foo")

--- test aug_rm()
aug_rm("etc/passwd/sync")
assert(aug_label("etc/passwd/sync") == nil)

--- test aug_mv()
aug_mv("etc/passwd/root", "etc/passwd/qux")
assert(aug_label("etc/passwd/*[last()]") == "qux")
assert(aug_label("etc/passwd/root") == nil)

--- test aug_cp()
aug_cp("etc/passwd/qux", "etc/passwd/root")
assert(aug_get("etc/passwd/root/uid") == aug_get("etc/passwd/qux/uid"))

--- test aug_rename()
aug_rename("etc/passwd/qux", "bar")
assert(aug_get("etc/passwd/root/uid") == aug_get("etc/passwd/bar/uid"))

--- test aug_matches()
m = aug_matches("etc/passwd/*")
assert(m == 20)

--- test aug_match()
m = aug_match("etc/passwd/*")
c = 0
for k, v in pairs(m) do c= c+1 end
assert(c > 0)
assert(m[1] == "/files/etc/passwd/foo")

--- test aug_defvar()
aug_defvar("root", "etc/passwd/root")
assert(aug_label("$root") == "root")

--- test aug_defnode()
aug_defnode("raphink", "etc/passwd/raphink/uid", "314")
assert(aug_get("$raphink") == "314")
--- TODO: support 3 arguments
--- aug_defnode("gid", "etc/passwd/raphink/gid")
--- assert(aug_get("$gid") == nil)

--- test aug_save()
--- reload tree to be clean
aug_load()
aug_set("etc/passwd/root/shell", "/bin/zsh")
aug_save()

--- test aug_load()
aug_load()

--- test aug_text_store()
aug_set("/input", "key=value\n")
aug_text_store("Shellvars.lns", "/input", "/parsed")
assert(aug_get("/parsed/key") == "value")

--- test aug_text_retrieve()
aug_set("/parsed/key", "newval")
aug_text_retrieve("Shellvars.lns", "/input", "/parsed", "/output")
assert(aug_get("/output") == "key=newval\n")

--- test aug_escape_name()
--- test that?

--- test aug_transform()
aug_transform("Json.lns", "/tmp/foo.json", false)
assert(aug_get("/augeas/load/Json/incl[1]") == "/tmp/foo.json")

--- test aug_print()

--- test aug_to_xml()

--- test aug_srun()

--- test aug_errors()
